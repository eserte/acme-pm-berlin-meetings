name: CI

on:
  push:
    branches-ignore:
      - '*travis*'
      - '*appveyor*'
      - '*doozer*'
  pull_request:

jobs:

  test_on_host:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
       include:
         - os: 'ubuntu-22.04'
         - os: 'ubuntu-24.04'
         - os: 'windows-latest'
    steps:
    - name: apt hacks
      # /etc/apt/sources.list should be sufficient; all the other repositories are possibly problematic
      run: |
        sudo rm -f /etc/apt/sources.list.d/*.list
        sudo apt-get update -qq
      if: "startsWith(matrix.os, 'ubuntu-')"
    - uses: taiki-e/checkout-action@v1

    - name: "perl dependency installation (ubuntu)"
      run: |
        sudo apt-get install -q --no-install-recommends -y cpanminus
        cpanm --sudo --quiet --installdeps --notest .
      if: "startsWith(matrix.os, 'ubuntu-')"
    - name: "perl dependency installation (windows)"
      run: |
        cpanm --quiet --installdeps --notest .
      if: "startsWith(matrix.os, 'windows-')"

    - name: "Build and test (ubuntu)"
      run: |
        set -e
        perl Makefile.PL
        HARNESS_TIMER=1 HARNESS_OPTIONS=j4:c make test
      if: "!startsWith(matrix.os,'windows-')"
    - name: "Build and test (windows)"
      run: |
        c:\strawberry\perl\bin\perl Makefile.PL
        c:\strawberry\c\bin\gmake
        c:\strawberry\c\bin\gmake test
      if: "startsWith(matrix.os, 'windows-')"

  test_in_container:
    name: Test with perl ${{ matrix.perlimage }}
    runs-on: ubuntu-latest
    container: perl:${{ matrix.perlimage }}
    strategy:
      matrix:
        include:
          - perlimage: 5.8.9-threaded-stretch
          - perlimage: 5.10.1-buster
          - perlimage: 5.12.5-stretch
          - perlimage: 5.14.4-stretch
          - perlimage: 5.16.3-buster
          - perlimage: 5.18.4-buster
          - perlimage: 5.22.4-stretch
          - perlimage: 5.36.0-slim-bullseye
          - perlimage: 5.40.0-slim-bookworm
    steps:
    - name: apt hacks
      run: |
        set -e
        CODENAME=$(perl -nle '/^VERSION_CODENAME="?([^"]+)/ and $codename=$1; /^VERSION="\d+ \((.*)\)/ and $maybe_codename=$1; END { print $codename || $maybe_codename }' /etc/os-release)
        case "$CODENAME" in
          wheezy|jessie|stretch|buster)
            echo "APT::Get::AllowUnauthenticated 1;" > /etc/apt/apt.conf.d/02allow-unsigned
            echo "deb [check-valid-until=no] http://archive.debian.org/debian $CODENAME main"                   >  /etc/apt/sources.list
            echo "deb [check-valid-until=no] http://archive.debian.org/debian-security/ $CODENAME/updates main" >> /etc/apt/sources.list
            ;;
        esac
    - uses: taiki-e/checkout-action@v1
    - name: Install dependencies
      run: |
        set -e
        apt-get update -qq
        apt-get install -q --no-install-recommends -y build-essential
        cpanm --quiet --installdeps --notest . || ( cat ~/.cpanm/work/*/build.log; false )
    - name: Build and test
      run: |
        set -e
        perl Makefile.PL
        HARNESS_TIMER=1 HARNESS_OPTIONS=j4:c make test
